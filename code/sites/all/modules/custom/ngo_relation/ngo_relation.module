<?php
function ngo_relation_menu() {
  $items = array();
  $items['admin/ngo_cause_relation'] = array( //this creates a URL that will call this form at "examples/form-example"
    'title' => 'NGO and cause relation', //page title
    'description' => 'Relation between NGO and cause',
    'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
    'page arguments' => array('ngo_relation_form'), //put the name of the form here
    'access callback' => TRUE
  );
  return $items;
}
function ngo_relation_form($form, &$form_state) {
  // Return all nids of nodes of type "page".
$ngo_nids = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->fields('n', array('type'))
    ->fields('n', array('title'))    
    ->condition('n.type', 'ngo')
    ->execute()
    ->fetchCol(); // returns an indexed array
// Now return the node objects.
$ngo_nodes = node_load_multiple($ngo_nids);
$ngo_list = array();
$cause_list = array();
$cause_nids = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->fields('n', array('type'))
    ->fields('n', array('title'))    
    ->condition('n.type', 'cause')
    ->execute()
    ->fetchCol(); // returns an indexed array
// Now return the node objects.
$cause_nodes = node_load_multiple($cause_nids);

$ngo_list[] = 'Please Select';
if(sizeof($ngo_nodes) > 0) {
    foreach($ngo_nodes as $key => $ngo_array) {
        $ngo_list[$key] = $ngo_array->title;
    }
}

if(sizeof($cause_nodes) > 0) {
    foreach($cause_nodes as $key => $cause_array) {
        $cause_list[$key] = $cause_array->title;
    }
}
  $form['ngo_id'] = array(
    '#type' => 'select',
    '#title' => t('NGO'),
    '#default_value' => '',
    '#options' => $ngo_list,
    '#required' => TRUE  
  );
  $form['cause_id'] = array(
    '#type' => 'select',
    '#title' => t('Cause'),
    '#default_value' => '',
    '#options' => $cause_list,
    '#multiple' => TRUE,  
    '#required' => TRUE  
  );
  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Save relationship'),
    );
  return $form;
}
function ngo_relation_form_validate($form, &$form_state) {
}
function ngo_relation_form_submit($form, &$form_state) {
}

 // during hook_form_alter, make sure $form & $form_state arguments are passed by reference
function ngo_relation_form_alter(&$form, &$form_state, $form_id) {
 //echo $form_id; print_r($form_state);
  // print form_id
  // drupal_set_message('<pre>' . print_r($form_id,true) . '</pre>');
  // drupal_set_message('<pre>' . print_r($form,true) . '</pre>');
 
  if ($form_id == 'campaign_node_form') {
    $form['actions']['submit']['#submit'][] = '_campaign_extra_submit_handler';     
  }
  if ($form_id == 'ngo_image_gallery_node_form') {
    $form['actions']['submit']['#submit'][] = '_ngo_image_extra_submit_handler';     
  }
  if ($form_id == 'forum_node_form') {
    $form['actions']['submit']['#submit'][] = '_forum_extra_submit_handler';     
  }
  if ($form_id == 'ngo_financial_data_node_form') {
    $form['actions']['submit']['#submit'][] = '_forum_extra_submit_handler';     
  }
  
}
 
// extra submit handler callback function
function _campaign_extra_submit_handler(&$form, &$form_state) {
    $lang = $form['field_ngo']['#language'];
    $ngo_id = $form_state['values']['field_ngo'][$lang][0]['nid'];
    if($ngo_id != '' && $ngo_id != 0) {
        unset($_GET['destination']);
	$form_state['redirect'] = Array('admin/admin-campaign', array('query' => array('field_ngo_nid' => $ngo_id)));
    }	
}
// extra submit handler callback function
function _ngo_image_extra_submit_handler(&$form, &$form_state) {
    $lang = $form['field_ngo']['#language'];
    $ngo_id = $form_state['values']['field_ngo'][$lang][0]['nid'];
    if($ngo_id != '' && $ngo_id != 0) {
        unset($_GET['destination']);
	$form_state['redirect'] = Array('admin/admin-ngo-image-gallery', array('query' => array('field_ngo_nid' => $ngo_id)));
    }	
}
// extra submit handler callback function
function _forum_extra_submit_handler(&$form, &$form_state) {
    $lang = $form['field_ngo']['#language'];
    $ngo_id = $form_state['values']['field_ngo'][$lang][0]['nid'];
    if($ngo_id != '' && $ngo_id != 0) {
        unset($_GET['destination']);
	$form_state['redirect'] = Array('admin/manage_forum', array('query' => array('field_ngo_nid' => $ngo_id)));
    }	
}
// extra submit handler callback function
function _ngo_financial_extra_submit_handler(&$form, &$form_state) {
    $lang = $form['field_ngo']['#language'];
    $ngo_id = $form_state['values']['field_ngo'][$lang][0]['nid'];
    if($ngo_id != '' && $ngo_id != 0) {
        unset($_GET['destination']);
	$form_state['redirect'] = Array('admin/ngo-financial-data', array('query' => array('field_ngo_nid' => $ngo_id)));
    }	
}

function ngo_relation_list_text_allowed_values($field){
  if($field['field_name'] == 'field_year_of_establishment'){
    return array('first','second','third');
  }
}
function _ngo_relation_get_all_year() {
    $options = array();
    $range = 100;
    $current_year = date("Y");
    $start_year = ($current_year - $range);
    for($i = $start_year; $i <= $current_year; $i++) {
        $options[$i] = $i;
    }
    return $options;
}
function ngo_relation_block_info() {
  $blocks['people_cause_campaign_list'] = array(
    'info' => t('People, Cause & Campaign list'),
    'cache' => DRUPAL_NO_CACHE, //see link below for what this does.
    //many other properties can be added here in this way.
    //for all options, http://api.drupal.org/api/drupal/modules--block--block.api.php/function/hook_block_info/7
  );  
  $blocks['home_slider'] = array(
    'info' => t('Home Slider'),
    'cache' => DRUPAL_NO_CACHE, //see link below for what this does.
  );  
  return $blocks;
}
function ngo_relation_block_view($delta) {
  $block = array();
  //delta is your block name. then just set it equal to your return functions.
  switch ($delta) {
    case 'people_cause_campaign_list':
      //use helper functions to set the blocks. Cleaner.
      $block = _ngo_people_cause_campaign_list();
      break;
    
      case 'home_slider':
      //use helper functions to set the blocks. Cleaner.
      $block = _home_slider();
      break;
  }
  return $block;
}
function _home_slider() {
  $content = '';  
  $content .= _home_slider_content();  
  $block['content'] = $content;
  $block['subject'] = '';
  return $block;
    
}
function _home_slider_content() {
    //return '';
    drupal_add_js(base_path() . libraries_get_path('flexslider') . '/jquery.flexslider.js');  
  drupal_add_js(base_path() . drupal_get_path('module', 'ngo_search') . '/js/slider.js');  
  drupal_add_css(libraries_get_path('flexslider') . '/flexslider.css');
    $output = '';
    $query = db_select("node", "n")->distinct();
    $query->join('field_data_field_banner_image', 'fni', 'fni.entity_id = n.nid');
    $query->fields('n', array('nid', 'title'))
           ->condition("type", "ngo")
           ->extend('PagerDefault')->limit(5);
    $result = $query->execute();
    $rows = array();
    global $base_url;
    
    $output .= "<div class='parent_content'>";
    $output .= "<div id='home-slider' class='main-slider flexslider'>";
    $output .= "<ul class='slides' id='ngo_slides'>";    
    while($data = $result->fetchObject()) {      
        
      $logo = '';
      $body = '';
      $logo_url = '';
      $banner_image_url = '';
        
      $ngoData = node_load($data->nid);
      if ($field_items = field_get_items('node', $ngoData, 'field_about')) {
        $body = $field_items[0]['value'];
      }
      if ($field_items = field_get_items('node', $ngoData, 'field_ngo_logo')) {
        $logo_obj = $field_items[0]['uri'];
        $logo = file_create_url($logo_obj);
      }
      if ($field_items = field_get_items('node', $ngoData, 'field_banner_image')) {
        $banner_image = $field_items[0]['uri'];
        $banner_image_url = file_create_url($banner_image);
      }
      if ($banner_image_url != '') {
          $logo = file_create_url($ngoData->field_ngo_logo['und'][0]['uri']);
          $desc = $ngoData->field_about['und'][0]['value'];
              $output .= '<li>
                                    <div><img src="' . $banner_image_url . '" /></div>';

          $output .= "<div class='parent_content'>" ;
          $output .= t($body);
          $output .= "</div>
                          </li>";
      }
    }
    $output .= "</ul> ";
    $output .= "</div>";      
    $output .= "</div>";     
    
    $output .= '<script>';

  $output .= '
  jQuery("#home-slider").flexslider({
      animation: "slide",
      slideshow: true, //Boolean: Animate slider automatically
    slideshowSpeed: 2000, //Integer: Set the speed of the slideshow cycling, in milliseconds
    animationSpeed: 1000, 
  });';
$output .= '</script>';
    
    return $output;
}
function _ngo_people_cause_campaign_list() {
  $content = '';  
  $content .= '';
  $content .= '<div style="float: left; width: 30%; margin: 0 5px;">';
  $content .= '<div class="bigfont">People</div>';
  $content .= _ngo_block_user_list();
  $content .= '</div>';
  $content .= '<div style="float: left; width: 30%; margin: 0 5px;">';
  $content .= '<div class="bigfont">Causes</div>';
  $content .= _ngo_block_cause_list();
  $content .= '</div>';
  $content .= '<div style="float: left; width: 30%; margin: 0 5px;">';
  $content .= '<div class="bigfont">Campaigns</div>';
  $content .= _ngo_block_campaign_list();
  $content .= '</div>';
  $content .= '<div class="clear">&nbsp;</div>';
  //this $block['content'] uses the old way, just a regular string.
  $block['content'] = $content;
  $block['subject'] = 'title';
  return $block;
    
}
function ngo_relation_query_random_alter($query) {
  $query->orderRandom();
}
function _ngo_block_cause_list() {
    $output = '';
 $type = 'cause';
 
 $query = new EntityFieldQuery();
$query->entityCondition('entity_type', 'node')
  ->propertyCondition('status', 1)
  ->propertyCondition('type', array($type))
  ->addTag('random')      
  ->range(0, 5);
$result = $query->execute();
 
 $nodes = node_load_multiple(array_keys($result['node']));
 
  $output .= '<div class="cause_lists">';
 foreach($nodes as $key => $node_obj) {
     $title = $node_obj->title;
    $nid = $node_obj->nid;
    $cause_path = drupal_lookup_path('alias',"node/". $nid);
    $icon = $node_obj->field_cause_icon[$node_obj->language][0];
    $ngo_count = 0;
    $row = (object)db_query("SELECT count({field_data_field_cause}.entity_id) as ngo_count from {field_data_field_cause} WHERE bundle = :bundle and field_cause_nid = :nid GROUP BY field_cause_nid LIMIT 1", array(":bundle" => 'ngo', ":nid" => $nid))->fetchAssoc();
    if(isset($row->ngo_count)) {
        $ngo_count = $row->ngo_count;
    }
    $output .= '<div class="cause_list">';
     $output .= '<div class="node_icon">';
     $output .= '<a href="' . $cause_path . '">';
     if(isset($icon['uri'])) {
      
     $output .= '<img width="60" src="' . image_style_url('thumbnail', $icon['uri']) . '" />';
     }
     $output .=  t($title);
     $output .= '</a>';
     $output .= '</div>';
     $output .= '<div class="node_ngocount">NGO: ' . $ngo_count . '</div>';
     $output .= '</div>';
 }
 $output .= '</div>';
 return $output;
}
function _ngo_block_campaign_list() {
    $output = '';
 $type = 'campaign';   
 $query = new EntityFieldQuery();
$query->entityCondition('entity_type', 'node')
  ->propertyCondition('status', 1)
  ->propertyCondition('type', array($type))
  ->addTag('random')      
  ->range(0, 5);
$result = $query->execute(); 
 $nodes = node_load_multiple(array_keys($result['node']));
  $output .= '<div class="cause_lists">';
  if (sizeof($nodes) > 0) {
     foreach($nodes as $key => $node) {
         $output .= '<div class="campaign_list">';
          $nid = $node->nid;
          $title = $node->title;
          $created = $node->created;

          $body = '';
          $ngo_array = array();
          $cause_array = array();
          $campaign_icon = '';
          $campaign_bg = '';
          $campaign_icon_url = '';
          $campaign_bg_url = '';
          $campaign_images = array();
          $campaign_image_full_url = '';
          $ngo_str = '';
          $cause_str = array();

          $campaign_image_thumb_url = '';

          if ($field_items = field_get_items('node', $node, 'field_description')) {
            $body = $field_items[0]['value'];
          }
          if ($field_items = field_get_items('node', $node, 'field_ngo')) {
            $ngo_array = $field_items[0];
          }
          if ($field_items = field_get_items('node', $node, 'field_campaign_image')) {
            $campaign_images = $field_items[0];
          }  
          if ($field_items = field_get_items('node', $node, 'field_cause')) {
            $cause_array = $field_items;
          }
          if (sizeof($ngo_array) > 0) {
            $ngo_node = node_load($ngo_array['nid']);
            if (sizeof($ngo_node) > 0) {
                $ngo_str .= '<a href="' . drupal_lookup_path('alias',"node/". $ngo_node->nid) . '">' . $ngo_node->title . '</a>';
            }
          }
          
          if (sizeof($cause_array) > 0) {
            foreach ($cause_array as $cause_list) {
                $cause_id = $cause_list['nid'];
                $cause_node = node_load($cause_id);
                if ($field_items = field_get_items('node', $cause_node, 'field_cause_icon')) {
                     $cause_icon = $field_items[0]['uri'];
                }
                $cause_icon_url = image_style_url('thumbnail', $cause_icon);
              $cause_str[] = '<a href="' . drupal_lookup_path('alias',"node/".$cause_node->nid) . '">' . t($cause_node->title) . '</a>';
            }
        }
          if (isset($campaign_images['uri'])) {
              $campaign_image = $campaign_images['uri'];
              $campaign_image_thumb_url = image_style_url('thumbnail', $campaign_image);
              $campaign_image_full_url = file_create_url($campaign_image);
          }  
          
          $output .= '<div><a href="' . drupal_lookup_path('alias',"node/".$nid) . '">';
          if ($campaign_image_full_url != '') {
              $output .= '<img src="' . $campaign_image_full_url . '" width="100" />';
          }
          $output .= t($title) . '</a></div>';
          
          if ($ngo_str != '') {
              $output .= '<div><b>NGO: </b>' . $ngo_str . '</div>';
          }
          if (sizeof($cause_str) > 0) {
              $output .= '<div><b>Cause: </b>';
              $output .= implode(", ", $cause_str);
              $output .= '</div>';
          }
          
          $output .= '</div>';
     }
  }
  $output .= '</div>';
  return $output;
}
function _ngo_block_user_list() {
 $uids = db_select('users', 'u')
    ->fields('u', array('uid'))
    ->condition('u.uid', array(0, 1), 'NOT IN')   
    ->range(0,5)    // Limit the result set by 1 record only
    ->orderRandom() // Sort by random     
    ->execute()
    ->fetchCol();
    
    $users = user_load_multiple($uids);
$output = '';
foreach ($users as $account) {
  $first_name = '';
  $last_name = '';
  $city = '';
  
  $output .= '<div class="user_list">'; // Cause List Start

  if ($field_items = field_get_items('user', $account, 'field_user_first_name')) {
    $first_name = $field_items[0]['value'];
  }
  if ($field_items = field_get_items('user', $account, 'field_user_last_name')) {
    $last_name = $field_items[0]['value'];
  }
  if ($field_items = field_get_items('user', $account, 'field_state_city')) {
    $city_id = $field_items[0]['tid'];
    if ($city_id != '') {
        $term = taxonomy_term_load($city_id);
        $city = $term->name;
    }
  }
  $output .= '<div class="user_name">' . $first_name . ' ' . $last_name . '</div>';
  $output .= '<div class="user_city">' . $city . '</div>';
  $output .= '</div>';
  
}
return $output;
}