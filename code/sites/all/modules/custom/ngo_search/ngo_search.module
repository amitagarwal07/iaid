<?php

/**
 * Implementation of hook_menu
 */
function ngo_search_menu(){
    $items = array();
    $items['ngo/search/results'] = array(
        'title' => 'NGO Search Results',
        'page callback' => 'ngosearch_form_searched_results',
        'access callback' => TRUE
    );
    return $items;
}

/**
 * Implementation hook_block_info().
 */
function ngo_search_block_info() {
  $blocks['ngo_search'] = array(
    'info' => t('NGO Search Block'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}
 
/**
 * Implementation of hook_block_view().
 */
function ngo_search_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'ngo_search':
      $block['subject'] = t('NGO Search');
      $block['content'] = drupal_get_form('ngo_search_form');
      break;

  }
  return $block;
}


/**
 * This function has been called from 'hook_block_view'
 */
function ngo_search_form($form, &$form_state) {
    
$city = isset($_REQUEST['city']) ? $_REQUEST['city'] : '';
$cause = isset($_REQUEST['cause']) ? $_REQUEST['cause'] : ''; 
$form = array();
$form['city'] = array(
    '#type' => 'select',
    '#title' => t('City'),
    '#options' => allCityNames(),
    '#default_value' => $city

 );
$form['cause'] = array(
    '#type' => 'select',
    '#title' => t('Cause'),
    '#options' => allCauses(),
    '#default_value' => $cause
 );

$ratings = array('1'=>'1','2'=>'2','3'=>'3','4'=>'4','5'=>'5');
$form['ratings'] = array(
    '#type' => 'select',
    '#title' => t('Ratings'),
    '#options' => $ratings,

 );

$form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Go')
); 
return $form;   

}

function allCityNames(){
    $city = array(
        ''=>'--Select--',
    );
    $stateTermId = db_query('SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = :state', array(':state' => 'state'))->fetchField();
    $data = taxonomy_get_tree($stateTermId);
    if(sizeof($data) > 0){
        foreach ($data as $ct){
              if($ct->parents[0] != 0){
                  $city[$ct->tid] = $ct->name;
              }
        }
    }
    return $city;
}

function allCauses(){
    $causes = array(
        ''=>'--Select--',
    );
    $causeTermId = db_query('SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = :name', array(':name' => 'cause'))->fetchField();
    $data = taxonomy_get_tree($causeTermId);
    if(sizeof($data) > 0){
        foreach ($data as $ca){
                  $causes[$ca->tid] = $ca->name;
              }
    }
    return $causes;
}

function ngo_search_form_submit($form,&$form_state){
    //print"<pre>";print_r($form_state['values']);exit;
    $city = $form_state['values']['city'];
    $cause = $form_state['values']['cause'];
    $ratings = $form_state['values']['ratings'];
    drupal_goto('ngo/search/results', array('query' => array('city' => $city , 'cause' =>$cause , 'ratings' => $ratings)));
}

function ngosearch_form_searched_results(){
    
  drupal_add_js(base_path() . libraries_get_path('flexslider') . '/jquery.flexslider.js');  
  drupal_add_js(base_path() . drupal_get_path('module', 'ngo_search') . '/js/slider.js');  
  drupal_add_css(libraries_get_path('flexslider') . '/flexslider.css');
    
    $city = $_REQUEST['city'];
    $cause = $_REQUEST['cause'];
    $ratings = $_REQUEST['ratings'];
    
//    $query = db_query("select * from node n
//                        INNER JOIN field_data_field_state_city ct ON ct.entity_id = n.nid
//                        INNER JOIN field_data_field_cause ca ON ca.entity_id = n.nid
//                        where ct.field_state_city_tid = :cityId OR ca.field_cause_nid = :causeId",array('cityId'=>$city,'causeId'=>$cause));
//
//    while($data = $query->fetchObject()) {
//           print"<pre>";print_r(node_load($data->nid));
//    }
    

    $output = '';
    $query = db_select("node", "n")->distinct();
    $query->join('field_data_field_state_city', 'ct', 'ct.entity_id = n.nid');
    $query->join('field_data_field_cause', 'ca', 'ca.entity_id = n.nid');
    $or = db_or()->condition('ct.field_state_city_tid', $city)->condition('ca.field_cause_nid', $cause);
    $query->fields('n', array('nid', 'title'))
           ->condition($or);
    $query = $query->extend('TableSort')->extend('PagerDefault')->limit(30);
    $result = $query->execute();
    $rows=array();
    
    global $base_url;
    while($data = $result->fetchObject()) {
      
      $ngoNid = $data->nid;
      $ngoData = node_load($data->nid);
      $logo = file_create_url($ngoData->field_ngo_logo['und'][0]['uri']);
      $desc = $ngoData->field_about['und'][0]['value'];
      $title = $data->title;
      
      $ngoPath = drupal_lookup_path('alias',"node/".$ngoNid);
      
      $wrapper = '';
      $wrapper .= "<div class='parent_content'>";
      
      $wrapper .= "<div class='parent_content' style='width:15%; float: left;'>";
      $wrapper .= "<img src='$logo' width='100px' height='100px'>";
      $wrapper .= "</div>";

      
      /* $query = new EntityFieldQuery();
      $query->entityCondition('entity_type', 'node')
          ->propertyCondition('status', 1)
          ->propertyCondition('type', array('ngo_image_gallery'))
          ->fieldCondition('field_ngo', 'nid', array($data->nid))
          ->propertyOrderBy('created', 'DESC')
          ->range(0, 100);

       $nodeResult = $query->execute();
       if(sizeof($nodeResult) > 0){
       $nodes = node_load_multiple(array_keys($nodeResult['node']));
    
    $wrapper .= "<div class='main-slider flexslider'>";
    $wrapper .= "<ul class='slides' id='individual_slides_$data->nid'> ";
    foreach ($nodes as $slide) {
          //$sliderImage =  render(field_view_field('node', $slide, 'field_ngo_image'));
          $gallery = node_show($slide);
          $sliderImage =  render($gallery);
          $wrapper .= "<li>
                           <div class='slide-image' style='width:200px;height:200px;'>
                                $sliderImage
                            </div>
                      </li>";
      }
      $wrapper .= "</ul> ";
      $wrapper .= "</div>";
       } */
      
      // Node Title
      $wrapper .= "<div class='parent_content' style='width:80%; float: left;'>";
      $wrapper .= "<div class='parent_content'>" ;
      $wrapper .= '<a href="' . base_path() . $ngoPath . '">' . $title . '</a>';
      $wrapper .= "</div>";
      
      $wrapper .= "<div class='parent_content'>" ;
      $wrapper .= $desc;
      $wrapper .= "</div>";
      
      $wrapper .= "</div>";
      
      $wrapper .= "</div>";
      $rows[] = array(
         $wrapper
       );
    }
    
    $output .= theme_table(
      array(
        'header' => array(),
        'rows' => $rows,
        'attributes' => array('width'=>'100%'),
        'sticky' => true,
        'caption' => '',
        'colgroups' => array(),
        'empty' => t("No Records Found."),
      )
    ).theme('pager');
    
    //print"<pre>";print_r($ngoData1);exit;
    return $output;
}
